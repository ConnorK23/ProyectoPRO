package view;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import controller.ControladorClientes;
import controller.ControladorPeliculas;
import dao.ClientesDAO;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JButton;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JMenuItem;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;


public class VistaPeliculas extends javax.swing.JFrame {
	String bd="peliculas";
    String us ="root";
    String pass="";
    ResultSet rs;
    Statement st;
    Connection con=null;
    DefaultTableModel modelo;
    
    public VistaPeliculas() {
    	modelo = new DefaultTableModel();
    	modelo.addColumn("Codigo Pelicula");
    	modelo.addColumn("Titulo");
    	modelo.addColumn("Autor");
    	setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        initComponents();
        conectar();
        llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	this.setLocationRelativeTo(null);
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTable1.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mousePressed(MouseEvent arg0) {
        		int fila = jTable1.getSelectedRow();
        		if(fila>=0){
        			jTextField1.setText(jTable1.getValueAt(fila, 0).toString());
        			jTextField2.setText(jTable1.getValueAt(fila, 1).toString());
        			jTextField3.setText(jTable1.getValueAt(fila, 2).toString());
        		}
        	}
        });
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if(validar()==true){Nuevo();}
        	}
        });
        jButton2 = new javax.swing.JButton();
        jButton2.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		String np = JOptionPane.showInputDialog(null, "Introduce el Codigo de Pelicula para eliminar sus datos");
        		Eliminar(np);
        	}
        });
        jButton3 = new javax.swing.JButton();
        jButton3.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if(validar()==true){Actualizar(jTextField1.getText().toString());}
        	}
        });
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        campo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField4.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyReleased(KeyEvent arg0) {
        		filtrarTabla(campo.getSelectedItem().toString(), jTextField4.getText().toString());
        	}
        });
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new DefaultTableModel(
        	new Object[][] {
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        		{null, null, null, null},
        	},
        	new String[] {
        		"Title 1", "Title 2", "Title 3", "Title 4"
        	}
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Codigo de Pelicula:");

        jLabel2.setText("Titulo:");

        jLabel3.setText("Autor:");

        jButton1.setText("Nuevo");

        jButton2.setText("Eliminar");

        jButton3.setText("Actualizar");

        jLabel4.setText("Busqueda por campos");

        jLabel5.setText("Campo:");

        campo.setModel(new DefaultComboBoxModel(new String[] {"Codigo_Peliculas", "Titulo", "Autor"}));

        jLabel6.setText("Filtro:");

        jMenu1.setText("Clientes");
        jMenuBar1.add(jMenu1);
        
        mntmVer = new JMenuItem("Ver");
        mntmVer.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		VistaClientes vistaClientes = new VistaClientes();
        		vistaClientes.setVisible(true);
        		VistaPeliculas.this.dispose();
        	}
        });
        jMenu1.add(mntmVer);

        jMenu2.setText("Peliculas");

        jMenuItem1.setText("Ver");
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Prestamos");
        jMenuBar1.add(jMenu3);
        
        mntmVer_1 = new JMenuItem("Ver");
        mntmVer_1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		VistaPrestamos vistaPrestamos = new VistaPrestamos();
        		vistaPrestamos.setVisible(true);
        		VistaPeliculas.this.dispose();
        	}
        });
        jMenu3.add(mntmVer_1);

        setJMenuBar(jMenuBar1);
        
        JButton btnBusquedaAvanzada = new JButton("Busqueda por Codigo");
        btnBusquedaAvanzada.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		String np = JOptionPane.showInputDialog(null, "Introduce el Codigo Pelicula");
        		filtrar(np);
        	}
        });
        
        btnLimpiar = new JButton("Limpiar");
        btnLimpiar.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jTextField1.setText("");
        		jTextField2.setText("");
        		jTextField3.setText("");
        		jTextField4.setText("");
        	}
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
        				.addGroup(layout.createSequentialGroup()
        					.addGap(46)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jLabel1)
        						.addComponent(jLabel2)
        						.addComponent(jLabel3))
        					.addGap(18)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        						.addComponent(jTextField1)
        						.addComponent(jTextField2)
        						.addComponent(jTextField3, GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
        					.addGap(36)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(jButton3)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(btnLimpiar))
        						.addGroup(layout.createParallelGroup(Alignment.LEADING)
        							.addGroup(layout.createSequentialGroup()
        								.addComponent(jButton1)
        								.addPreferredGap(ComponentPlacement.UNRELATED)
        								.addComponent(jButton2)
        								.addGap(0, 10, Short.MAX_VALUE))
        							.addGroup(layout.createSequentialGroup()
        								.addComponent(jLabel6)
        								.addGap(18)
        								.addComponent(jTextField4))
        							.addGroup(layout.createSequentialGroup()
        								.addComponent(jLabel5)
        								.addPreferredGap(ComponentPlacement.UNRELATED)
        								.addComponent(campo, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        				.addGroup(layout.createSequentialGroup()
        					.addContainerGap()
        					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 344, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(btnBusquedaAvanzada)
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(jLabel4)
        							.addGap(26)))))
        			.addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(17)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel1)
        				.addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jButton1)
        				.addComponent(jButton2))
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(jTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addComponent(jLabel2))
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(jTextField3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addComponent(jLabel3)))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(31)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(jButton3)
        						.addComponent(btnLimpiar))))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jLabel4)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(campo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addComponent(jLabel5))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(jLabel6)
        						.addComponent(jTextField4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addGap(18)
        					.addComponent(btnBusquedaAvanzada)
        					.addGap(19))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
        					.addContainerGap())))
        );
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void filtrarTabla(String campo, String texto){
    	String sql="";
    	DefaultTableModel modelo = new DefaultTableModel();
    	modelo.addColumn("Codigo_Pelicula");
    	modelo.addColumn("Titulo");
    	modelo.addColumn("Autor");
    	jTable1.setModel(modelo);
    	sql = "SELECT * FROM peliculas WHERE " + campo + " LIKE '%" + texto + "%'";
    	String[] datos = new String[3];
		try {
			Statement st = con.createStatement();
			ResultSet rs = st.executeQuery(sql);
			while(rs.next()){
				datos[0] = rs.getString(1);
				datos[1] = rs.getString(2);
				datos[2] = rs.getString(3);
				modelo.addRow(datos);
			}
			jTable1.setModel(modelo);
		} catch (SQLException e) {
			System.out.println("ERROR de BUSQUEDA");
		}
    }
    
    public boolean Actualizar(String np){
    	boolean success = false;
    	String sql = "UPDATE peliculas SET Codigo_Peliculas= ?, Titulo= ?, Autor= ? WHERE Codigo_Peliculas="+np;
    	try {
			PreparedStatement pr = con.prepareStatement(sql);
			pr.setString(1, jTextField1.getText().toString());
			pr.setString(2, jTextField2.getText().toString());
			pr.setString(3, jTextField3.getText().toString());
			int rows = pr.executeUpdate();
			if(rows != 0)
				success = true;
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null, "No puedes alterar el Codigo de Pelicula");
		}
    	llenarTabla();
    	return success;
    }
    
    public void Eliminar(String np){
    	String sql = "DELETE FROM peliculas WHERE Codigo_Peliculas= '"+np+"'";
    	int respuesta = JOptionPane.showConfirmDialog(null, "Estas seguro que desea eliminar este registro", "Eliminar", JOptionPane.YES_NO_OPTION);
    	
    		try {
    			if (respuesta == JOptionPane.YES_OPTION){
					st = con.createStatement();
					rs = st.executeQuery(sql); 
    			}
			} catch (SQLException e) {
				if (respuesta == JOptionPane.NO_OPTION){
					System.out.println("ERROR en el BORRADO");
				}
			}
    		llenarTabla();
    }
    
    public void filtrar(String np){
    	String sql = "SELECT * FROM peliculas WHERE Codigo_Peliculas="+np;
    	try {
			Statement st = con.createStatement();
			ResultSet rs = st.executeQuery(sql);
			if(rs.next()){
				jTextField1.setText(rs.getString(1));
				jTextField2.setText(rs.getString(2));
				jTextField3.setText(rs.getString(3));
				JOptionPane.showMessageDialog(null, "Se encontro el registro con exito");
			} else {
				JOptionPane.showMessageDialog(null, "No se encontro el registro indicado");
			}
		} catch (SQLException e) {
			System.out.println("Error en FILTRAR");
		}
    }
    
    public void llenarTabla(){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Codigo Pelicula");
        modelo.addColumn("Titulo");
        modelo.addColumn("Autor");
        String sql = "SELECT * FROM peliculas";
        String[] datos = new String[3];
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                modelo.addRow(datos);
            }
            jTable1.setModel(modelo);
        } catch (SQLException ex) {
            System.out.println("ERROR1");
        }
    }
    
    public boolean validar(){
        if(jTextField1.getText().equals("") || jTextField2.getText().equals("") || jTextField3.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Faltan campos por llenar");
            return false;
        } else {
            return true;
        }
    }
    
    public boolean Nuevo(){
    	boolean success = false;
    	String sql = "INSERT INTO peliculas VALUES (?, ? ,?)";
    	try {
			PreparedStatement pr = con.prepareStatement(sql);
			pr.setString(1, jTextField1.getText().toString());
			pr.setString(2, jTextField2.getText().toString());
			pr.setString(3, jTextField3.getText().toString());
			int rows = pr.executeUpdate();
			if(rows != 0)
				success = true;
		} catch (SQLException e) {
        	JOptionPane.showMessageDialog(null, "Has introducido un codigo igual. Intentalo de nuevo modificando el codigo");
		}
    	llenarTabla();
    	return success;
    }
    
    public void conectar(){
        try {
            Class.forName("org.sqlite.JDBC");
            con = DriverManager.getConnection("jdbc:sqlite:BD/VideoClub.bd");
            System.out.println("CONEXION EXITOSA");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaPeliculas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(VistaPeliculas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public String getBd() {
		return bd;
	}

	public void setBd(String bd) {
		this.bd = bd;
	}

	public String getUs() {
		return us;
	}

	public void setUs(String us) {
		this.us = us;
	}

	public String getPass() {
		return pass;
	}

	public void setPass(String pass) {
		this.pass = pass;
	}

	public ResultSet getRs() {
		return rs;
	}

	public void setRs(ResultSet rs) {
		this.rs = rs;
	}

	public Statement getSt() {
		return st;
	}

	public void setSt(Statement st) {
		this.st = st;
	}

	public Connection getCon() {
		return con;
	}

	public void setCon(Connection con) {
		this.con = con;
	}

	public javax.swing.JButton getjButton1() {
		return jButton1;
	}

	public void setjButton1(javax.swing.JButton jButton1) {
		this.jButton1 = jButton1;
	}

	public javax.swing.JButton getjButton2() {
		return jButton2;
	}

	public void setjButton2(javax.swing.JButton jButton2) {
		this.jButton2 = jButton2;
	}

	public javax.swing.JButton getjButton3() {
		return jButton3;
	}

	public void setjButton3(javax.swing.JButton jButton3) {
		this.jButton3 = jButton3;
	}

	public javax.swing.JComboBox<String> getCampo() {
		return campo;
	}

	public void setCampo(javax.swing.JComboBox<String> campo) {
		this.campo = campo;
	}

	public javax.swing.JLabel getjLabel1() {
		return jLabel1;
	}

	public void setjLabel1(javax.swing.JLabel jLabel1) {
		this.jLabel1 = jLabel1;
	}

	public javax.swing.JLabel getjLabel2() {
		return jLabel2;
	}

	public void setjLabel2(javax.swing.JLabel jLabel2) {
		this.jLabel2 = jLabel2;
	}

	public javax.swing.JLabel getjLabel3() {
		return jLabel3;
	}

	public void setjLabel3(javax.swing.JLabel jLabel3) {
		this.jLabel3 = jLabel3;
	}

	public javax.swing.JLabel getjLabel4() {
		return jLabel4;
	}

	public void setjLabel4(javax.swing.JLabel jLabel4) {
		this.jLabel4 = jLabel4;
	}

	public javax.swing.JLabel getjLabel5() {
		return jLabel5;
	}

	public void setjLabel5(javax.swing.JLabel jLabel5) {
		this.jLabel5 = jLabel5;
	}

	public javax.swing.JLabel getjLabel6() {
		return jLabel6;
	}

	public void setjLabel6(javax.swing.JLabel jLabel6) {
		this.jLabel6 = jLabel6;
	}

	public javax.swing.JMenu getjMenu1() {
		return jMenu1;
	}

	public void setjMenu1(javax.swing.JMenu jMenu1) {
		this.jMenu1 = jMenu1;
	}

	public javax.swing.JMenu getjMenu2() {
		return jMenu2;
	}

	public void setjMenu2(javax.swing.JMenu jMenu2) {
		this.jMenu2 = jMenu2;
	}

	public javax.swing.JMenu getjMenu3() {
		return jMenu3;
	}

	public void setjMenu3(javax.swing.JMenu jMenu3) {
		this.jMenu3 = jMenu3;
	}

	public javax.swing.JMenuBar getjMenuBar1() {
		return jMenuBar1;
	}

	public void setjMenuBar1(javax.swing.JMenuBar jMenuBar1) {
		this.jMenuBar1 = jMenuBar1;
	}

	public javax.swing.JMenuItem getjMenuItem1() {
		return jMenuItem1;
	}

	public void setjMenuItem1(javax.swing.JMenuItem jMenuItem1) {
		this.jMenuItem1 = jMenuItem1;
	}

	public javax.swing.JScrollPane getjScrollPane1() {
		return jScrollPane1;
	}

	public void setjScrollPane1(javax.swing.JScrollPane jScrollPane1) {
		this.jScrollPane1 = jScrollPane1;
	}

	public javax.swing.JTable getjTable1() {
		return jTable1;
	}

	public void setjTable1(javax.swing.JTable jTable1) {
		this.jTable1 = jTable1;
	}

	public javax.swing.JTextField getjTextField1() {
		return jTextField1;
	}

	public void setjTextField1(javax.swing.JTextField jTextField1) {
		this.jTextField1 = jTextField1;
	}

	public javax.swing.JTextField getjTextField2() {
		return jTextField2;
	}

	public void setjTextField2(javax.swing.JTextField jTextField2) {
		this.jTextField2 = jTextField2;
	}

	public javax.swing.JTextField getjTextField3() {
		return jTextField3;
	}

	public void setjTextField3(javax.swing.JTextField jTextField3) {
		this.jTextField3 = jTextField3;
	}

	public javax.swing.JTextField getjTextField4() {
		return jTextField4;
	}

	public void setjTextField4(javax.swing.JTextField jTextField4) {
		this.jTextField4 = jTextField4;
	}

	public JButton getBtnLimpiar() {
		return btnLimpiar;
	}

	public void setBtnLimpiar(JButton btnLimpiar) {
		this.btnLimpiar = btnLimpiar;
	}

	public JMenuItem getMntmVer() {
		return mntmVer;
	}

	public void setMntmVer(JMenuItem mntmVer) {
		this.mntmVer = mntmVer;
	}

	public JMenuItem getMntmVer_1() {
		return mntmVer_1;
	}

	public void setMntmVer_1(JMenuItem mntmVer_1) {
		this.mntmVer_1 = mntmVer_1;
	}

	/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	try {
            		VistaPeliculas frame = new VistaPeliculas();
        			ClientesDAO clientesDAO = new ClientesDAO();
        			new ControladorPeliculas(frame, clientesDAO);
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> campo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private JButton btnLimpiar;
    private JMenuItem mntmVer;
    private JMenuItem mntmVer_1;

	public DefaultTableModel getModelo() {
		return modelo;
	}

	public void setModelo(DefaultTableModel modelo) {
		this.modelo = modelo;
	}
}
